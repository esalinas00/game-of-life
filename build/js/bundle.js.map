{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/js/main.js","src/js/handler.js","src/js/painter.js","src/js/universe.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Painter = require('./painter');\nvar Universe = require('./universe');\nvar Handler = require('./handler');\n\nvar MyPainter = new Painter();\nvar MyUniverse = new Universe();\nvar MyHandler = new Handler(function(data){\n\tMyUniverse.toggleCell.call(MyUniverse,data.i,data.j)\n\t//MyUniverse.logU.call(MyUniverse);\n\tMyPainter.redrawCell.call(MyPainter,data.i,data.j,MyUniverse.leUniverse[data.i][data.j]);\n},function(){\n\tMyUniverse.oneTurn.call(MyUniverse);\n});\nconsole.log(\"mufasa\");","function Handler (cb,next) {\n\n\tvar canvas = document.getElementById('game');\n\tcanvas.addEventListener('click',function (e) {\n\t\tvar i = Math.floor(e.offsetY/(20+1));\n\t\tvar j = Math.floor(e.offsetX/(20+1));\n\t\tcb({i:i,j:j});\n\t},false);\n\n\tdocument.addEventListener('keydown',function(e){\n\t\tswitch(e.which){\n\t\t\tcase 39:\n      \t\tcase 68:\n\t\t        //console.log(\"Right action\");\n\t\t       \t//code here\n\t        \tconsole.log(\"NEXT TURN\");\n\t        \tnext();\n\t        \tbreak;\n\t        default:\n\t        \tbreak;\n\t\t}\n\t},false);\n}\n\nmodule.exports = Handler;","function Painter(){\n\tvar canvas = document.getElementById('game'); \n\tthis.gameLength = 20;\n\tthis.ctx;\n\tthis.blockSize = 20;\n\tthis.separation = 1;\n\tthis.colorMappings = ['#fff','#2196f3','#bdbdbd'];\n\t\n\tif(canvas.getContext){\n  \tthis.ctx = canvas.getContext('2d');\n\n  \tthis.ctx.beginPath();\n    this.ctx.fillStyle = \"#000\";\n    this.ctx.fillRect(0,0,canvas.width,canvas.height);\n\n  \tfor (var i=0;i<this.gameLength;i++){\n    \tfor (var j=0;j<this.gameLength;j++){\n        this.ctx.beginPath();\n        this.ctx.fillStyle = \"#fff\";\n        this.ctx.fillRect((this.blockSize+this.separation)*i,(this.blockSize+this.separation)*j,this.blockSize,this.blockSize);\n    \t}\n  \t}\n  }\n}\n\nPainter.prototype.redrawCell = function(y,x,state) {\t\n\t//console.log(arguments);\n\tthis.ctx.beginPath();\n\tthis.ctx.fillStyle = this.colorMappings[state];\n\tthis.ctx.fillRect((this.blockSize+this.separation)*x,(this.blockSize+this.separation)*y,this.blockSize,this.blockSize);\n\t}\n\nmodule.exports = Painter;\n","function Universe(){\n\tthis.width = 20;\n\tthis.leUniverse = [];\n\t/** Cell states\n\t0 : none,\n\t1 : alive,\n\t2 : dead,\n\t**/\n\tfunction init() {\n\t\tvar i = 0, j = 0;\n\t\tfor(; i < this.width; i+=1 ){\n\t\t\tthis.leUniverse.push([]);\n\t\t\tfor(j = 0; j < this.width; j+=1 ){\n\t\t\t\tthis.leUniverse[i][j] = 0;\n\t\t\t}\n\t\t}\n\n\t}\t\n\tinit.call(this);\n}\n\nUniverse.prototype.logU = function() {\n\tvar i = 0, j, toLog = \"\";\n\t\tfor(; i < this.width; i+=1 ){\n\t\t\tfor(j = 0; j < this.width; j+=1 ){\n\t\t\t\ttoLog += this.leUniverse[i][j] +\" \";\n\t\t\t}\n\t\ttoLog += \"\\n\";\n\t\t}\n\tconsole.log(toLog);\n};\n\n\nUniverse.prototype.toggleCell = function(y,x) {\n\tvar cell = this.leUniverse[y][x];\n\tif( cell === 1){\n\t\tthis.leUniverse[y][x] = 0;\n\t} else {\n\t\tthis.leUniverse[y][x] = 1;\n\t}\n};\n\nUniverse.prototype.oneTurn = function(){\n\tvar i = 0, j;\n\tvar board = this.leUniverse;\n\t//console.log(board[-1][-1]);\n\tvar neighbors;\n\tfor(; i < this.width; i+=1 ){\n\t\tfor(j = 0; j < this.width; j+=1 ){\n\t\t\tneighbors = 0;\n\t\t\t//validations for death\n\t\t\tvar i2 = i-1, limitI = i+1;\n\t\t\tvar j2,limitJ;\n\t\t\t//needs to be alive to die :v\n\t\t\tif(board[i][j] === 1){\n\t\t\tconsole.log(i,j, \" is ALIVE\");\t\t\t\t\n\t\t\t\tfor(;i2<=limitI;i2+=1){\n\t\t\t\t\t//console.log(i2,\" i2\");\n\t\t\t\t\tj2 = j-1, limitJ = j + 1;\n\t\t\t\t\tfor(;j2<=limitJ;j2+=1){\n\t\t\t\t\t\t//console.log(j2,\" j2\");\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif(board[i2][j2] === 1){\n\t\t\t\t\t\t\t\tneighbors +=1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t//Type error exception thow when accesing an unexisting array property\n\t\t\t\t\t\t\t//example: board[-1][-1]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//substract himself\n\t\t\t\tneighbors-=1;\n\t\t\t\tconsole.log(i,j,\" Has \",neighbors,\" neighbors\");\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = Universe;"]}